"""Add family hierarchy

Revision ID: cad1eb44afdc
Revises: 49ba8a06ab82
Create Date: 2025-04-04 13:55:05.614510

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'cad1eb44afdc'
down_revision: Union[str, None] = '49ba8a06ab82'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('level1_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('level2_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level1_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['level1_id'], ['level1_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level3_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level2_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['level2_id'], ['level2_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level4_categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('level3_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['level3_id'], ['level3_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('families', sa.Column('level1_id', sa.Integer(), nullable=True))
    op.add_column('families', sa.Column('level2_id', sa.Integer(), nullable=True))
    op.add_column('families', sa.Column('level3_id', sa.Integer(), nullable=True))
    op.add_column('families', sa.Column('level4_id', sa.Integer(), nullable=True))
    op.drop_constraint('families_name_key', 'families', type_='unique')
    op.create_foreign_key(None, 'families', 'level4_categories', ['level4_id'], ['id'])
    op.create_foreign_key(None, 'families', 'level1_categories', ['level1_id'], ['id'])
    op.create_foreign_key(None, 'families', 'level2_categories', ['level2_id'], ['id'])
    op.create_foreign_key(None, 'families', 'level3_categories', ['level3_id'], ['id'])
    op.drop_column('families', 'name')
    op.drop_column('families', 'family_description')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('families', sa.Column('family_description', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('families', sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'families', type_='foreignkey')
    op.drop_constraint(None, 'families', type_='foreignkey')
    op.drop_constraint(None, 'families', type_='foreignkey')
    op.drop_constraint(None, 'families', type_='foreignkey')
    op.create_unique_constraint('families_name_key', 'families', ['name'])
    op.drop_column('families', 'level4_id')
    op.drop_column('families', 'level3_id')
    op.drop_column('families', 'level2_id')
    op.drop_column('families', 'level1_id')
    op.drop_table('level4_categories')
    op.drop_table('level3_categories')
    op.drop_table('level2_categories')
    op.drop_table('level1_categories')
    # ### end Alembic commands ###
